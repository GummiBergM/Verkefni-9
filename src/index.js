/**
 * Gefi√∞ efni fyrir verkefni 9, ekki er krafa a√∞ nota n√°kv√¶mlega √æetta en nota
 * ver√∞ur gefnar sta√∞setningar.
 */

import { el } from "./lib/elements.js";
import { weatherSearch } from "./lib/weather.js";

/**
 * @typedef {Object} SearchLocation
 * @property {string} title
 * @property {number} lat
 * @property {number} lng
 */

/**
 * Allar sta√∞setning sem h√¶gt er a√∞ f√° ve√∞ur fyrir.
 * @type Array<SearchLocation>
 */
const locations = [
  {
    title: "M√≠n sta√∞setning (√æarf leyfi)",
    className: "my-location",
    lat: 1000,
    lng: 1000,
  },
  {
    title: "Reykjav√≠k",
    lat: 64.1355,
    lng: -21.8954,
  },
  {
    title: "Akureyri",
    lat: 65.6835,
    lng: -18.0878,
  },
  {
    title: "New York",
    lat: 40.7128,
    lng: -74.006,
  },
  {
    title: "Tokyo",
    lat: 35.6764,
    lng: 139.65,
  },
  {
    title: "Sydney",
    lat: 33.8688,
    lng: 151.2093,
  },
];

/**
 * Birta villu √≠ vi√∞m√≥ti.
 * @param {Error} error
 */
function renderError(error) {
  // TODO √∫tf√¶ra
  console.log(error);


  const mainWeather = document.querySelector("main.weather");
  const errorText = document.createElement("p");
  errorText.textContent = "Villa kom upp: " + error;
  mainWeather.appendChild(errorText);
}

/**
 * Framkv√¶mir leit a√∞ ve√∞ri fyrir n√∫verandi sta√∞setningu.
 * Bi√∞ur notanda um leyfi gegnum vafra.
 */
async function onSearchMyLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      (position) => {
        // Success callback
        const userLat = position.coords.latitude;
        const userLng = position.coords.longitude;
        console.log(`Latitude: ${userLat}, Longitude: ${userLng}`);

        locations[0].lat = userLat;
        locations[0].lng = userLng;
      },
      (error) => {
        renderError(error.message);
      }
    );
  } else {
    console.log("Sta√∞setning er ekki studd √° √æessum vafra.");
  }

  console.log(locations[0]);    
}

/**
 * Birta bi√∞st√∂√∞u √≠ vi√∞m√≥ti.
 */
function renderLoading() {
  console.log("render loading");
  // TODO √∫tf√¶ra
  const mainWeather = document.querySelector("main.weather");

  // Ey√∞a g√∂mlum ni√∞urst√∂√∞um ef til
  const previousResults = mainWeather.querySelector(".results");
  if (previousResults) {
    mainWeather.removeChild(previousResults);
  }

  // Tj√©kkar ef "nidurstodurText" er til
  let nidurstodurText = mainWeather.querySelector("h2.nidurstodurText");
  if (!nidurstodurText) {
    // Ef ekki til, √æ√° b√∫a til "nidurstodurText"
    nidurstodurText = document.createElement("h2");
    nidurstodurText.textContent = "Ni√∞urst√∂√∞ur";
    nidurstodurText.classList.add("nidurstodurText");
    mainWeather.appendChild(nidurstodurText);
  }

  // Tj√©kkar ef "leita" er til
  let leita = mainWeather.querySelector("p.leitaText");
  if (!leita) {
    // Ef ekki til, √æ√° b√∫a til "leita"
    leita = document.createElement("p");
    leita.textContent = "Leita...";
    leita.classList.add("leitaText");
    mainWeather.appendChild(leita);
  }
}

/**
 * Framkv√¶mir leit a√∞ ve√∞ri fyrir gefna sta√∞setningu.
 * Birtir bi√∞st√∂√∞u, villu e√∞a ni√∞urst√∂√∞ur √≠ vi√∞m√≥ti.
 * @param {SearchLocation} location Sta√∞setning sem √° a√∞ leita eftir.
 */
async function onSearch(location) {
  console.log("onSearch", location);

  // Birta loading state
  renderLoading();

  // S√¶kja n√Ω g√∂gn fyrir gefna sta√∞setningu
  const results = await weatherSearch(location.lat, location.lng);

  console.log(results);

  // Finna <main> me√∞ klasanum "weather"
  const mainWeather = document.querySelector("main.weather");

  // Fjarl√¶gja "leita" eftir a√∞ ni√∞urst√∂√∞urnar eru hla√∞nar
  const leita = mainWeather.querySelector("p.leitaText");
  if (leita) {
    mainWeather.removeChild(leita);
  }

  // B√∫a til n√Ωtt div fyrir ni√∞urst√∂√∞ur
  const tableContainer = document.createElement("div");
  tableContainer.classList.add("results");

  // B√∫a til ytri div fyrir titla
  const titleContainer = document.createElement("div");

  // B√∫a til titill
  const title = document.createElement("h3");
  title.textContent = location.title;
  titleContainer.appendChild(title);

  // B√∫a til undirtitill
  const titleSubtext = document.createElement("p");
  titleSubtext.textContent =
    "Sp√° fyrir daginn √° breiddargr√°√∞u " +
    location.lat +
    " og lengdargr√°√∞u " +
    location.lng;
  titleContainer.appendChild(titleSubtext);

  // B√¶ta titla div vi√∞ tableContainer
  tableContainer.appendChild(titleContainer);

  // B√∫a til t√∂flu
  const table = document.createElement("table");
  table.classList.add("forecast");

  // B√∫a til haus √° t√∂flu
  const headerRow = document.createElement("tr");
  const headers = ["Klukkut√≠mi", "Hiti (¬∞C)", "√örkoma (mm)"];
  headers.forEach((headerText) => {
    const header = document.createElement("th");
    header.textContent = headerText;
    headerRow.appendChild(header);
  });
  table.appendChild(headerRow);

  // B√∫a til tbody
  const tbody = document.createElement("tbody");
  table.appendChild(tbody);

  // B√∫a til l√≠nu √≠ t√∂flu fyrir hvern t√≠ma
  results.hourly.time.forEach((dateTime, index) => {
    const row = document.createElement("tr");

    // B√¶ta vi√∞ t√≠ma
    const timeOnly = dateTime.split("T")[1];

    // T√≠mi
    const timeCell = document.createElement("td");
    timeCell.textContent = timeOnly;
    row.appendChild(timeCell);

    // Hiti
    const tempCell = document.createElement("td");
    tempCell.textContent = results.hourly.temperature_2m[index];
    row.appendChild(tempCell);

    // √örkoma
    const rainCell = document.createElement("td");
    rainCell.textContent = results.hourly.precipitation[index];
    row.appendChild(rainCell);

    // B√¶ta vi√∞ l√≠nu √≠ t√∂flu
    tbody.appendChild(row);
  });

  // B√¶ta vi√∞ t√∂flu vi√∞ tableContainer
  tableContainer.appendChild(table);

  // B√¶ta tableContainer vi√∞ main.weather
  mainWeather.appendChild(tableContainer);
}



/**
 * B√Ωr til takka fyrir sta√∞setningu.
 * @param {string} locationTitle
 * @param {() => void} onSearch
 * @returns {HTMLElement}
 */
function renderLocationButton(locationTitle, onSearch) {
  // Notum `el` falli√∞ til a√∞ b√∫a til element og spara okkur nokkur skref.
  const locationElement = el(
    "li",
    { class: "locations__location" },
    el("button", { class: "locations__button", click: onSearch }, locationTitle)
  );

  /* Til smanbur√∞ar vi√∞ el falli√∞ ef vi√∞ myndum nota DOM a√∞ger√∞ir
  const locationElement = document.createElement('li');
  locationElement.classList.add('locations__location');
  const locationButton = document.createElement('button');
  locationButton.appendChild(document.createTextNode(locationTitle));
  locationButton.addEventListener('click', onSearch);
  locationElement.appendChild(locationButton);
  */

  return locationElement;
}

/**
 * B√Ωr til grunnvi√∞m√≥t: haus og l√Ωsingu, lista af sta√∞setningum og ni√∞urst√∂√∞ur (fali√∞ √≠ byrjun).
 * @param {Element} container HTML element sem inniheldur allt.
 * @param {Array<SearchLocation>} locations Sta√∞setningar sem h√¶gt er a√∞ f√° ve√∞ur fyrir.
 * @param {(location: SearchLocation) => void} onSearch
 * @param {() => void} onSearchMyLocation
 */
function render(container, locations, onSearch, onSearchMyLocation) {
  // B√∫um til <main> og setjum `weather` class
  const parentElement = document.createElement("main");
  parentElement.classList.add("weather");

  // B√∫um til <header> me√∞ beinum DOM a√∞ger√∞um
  const headerElement = document.createElement("header");
  const heading = document.createElement("h1");
  heading.appendChild(document.createTextNode("‚òÄÔ∏è Ve√∞ri√∞ üåßÔ∏è"));
  headerElement.appendChild(heading);
  parentElement.appendChild(headerElement);

  const subtext = document.createElement("p");
  subtext.appendChild(
    document.createTextNode("Veldu sta√∞ til a√∞ sj√° hita- og √∫rkomusp√°.")
  );
  parentElement.appendChild(subtext);

  const stadsetningar = document.createElement("h2");
  stadsetningar.appendChild(document.createTextNode("Sta√∞setningar"));
  parentElement.appendChild(stadsetningar);

  // TODO √∫tf√¶ra inngangstexta
  // B√∫a til <div class="loctions">
  const locationsElement = document.createElement("div");
  locationsElement.classList.add("locations");

  // B√∫a til <ul class="locations__list">
  const locationsListElement = document.createElement("ul");
  locationsListElement.classList.add("locations__list");

  // <div class="loctions"><ul class="locations__list"></ul></div>
  locationsElement.appendChild(locationsListElement);

  // <div class="loctions"><ul class="locations__list"><li><li><li></ul></div>
  for (const location of locations) {
    const liButtonElement = renderLocationButton(location.title, () => {
      onSearch(location);
    });
    locationsListElement.appendChild(liButtonElement);

    if (location.className === "my-location") {
      liButtonElement.addEventListener("click", onSearchMyLocation);
    }
  }

  parentElement.appendChild(locationsElement);

  // TODO √∫tf√¶ra ni√∞urst√∂√∞u element

  container.appendChild(parentElement);
}

// √ûetta fall b√Ωr til grunnvi√∞m√≥t og setur √æa√∞ √≠ `document.body`
render(document.body, locations, onSearch, onSearchMyLocation);
